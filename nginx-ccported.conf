# Nginx configuration for CCPorted
# Save this file to /etc/nginx/sites-available/ccported
# Then create a symlink: ln -s /etc/nginx/sites-available/ccported /etc/nginx/sites-enabled/
# Adjust server_name to match your domain

server {
    listen 80;
    server_name ccported.example.com;  # Replace with your domain name

    # Redirect HTTP to HTTPS
    # Uncomment these lines if you're using SSL
    # location / {
    #     return 301 https://$host$request_uri;
    # }
}

server {
    # Uncomment these lines if you're using SSL
    # listen 443 ssl;
    # server_name ccported.example.com;  # Replace with your domain name
    
    # SSL configuration
    # ssl_certificate /etc/letsencrypt/live/ccported.example.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/ccported.example.com/privkey.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_prefer_server_ciphers on;
    # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;

    # Use if you're not using SSL
    listen 80;
    server_name ccported.example.com;  # Replace with your domain name

    # Logging
    access_log /var/log/nginx/ccported_access.log;
    error_log /var/log/nginx/ccported_error.log;

    # Proxy settings
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Large file uploads - adjust if needed
    client_max_body_size 100M;
}
